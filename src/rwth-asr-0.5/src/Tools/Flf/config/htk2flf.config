# HTK SLF lattices to FLF lattices

[*]
lexicon-file				=
corpus-file				=
log-file				=

htk-archive				=
flf-archive				=


# ---------------------------------------------------------------------------
[*]
log-channel.file			= $(log-file)
error.channel				= log-channel, stderr
warning.channel				= log-channel, stderr
log.channel				= log-channel #, stdout
progress.channel      			= log-channel, stdout
statistics.channel			= log-channel
configuration.channel   		= log-channel
system-info.channel     		= log-channel
encoding				= utf-8
unbuffered				= true
ignore-unknown-parameters		= true
on-error				= immediate-exit


# ---------------------------------------------------------------------------
[*.lexicon]
file					= $(lexicon-file)
read-only				= true


# ---------------------------------------------------------------------------
[*.corpus]
file					= $(corpus-file)
warn-about-unexpected-elements		= no
capitalize-transcriptions		= no


# ---------------------------------------------------------------------------
[*.network]
initial-nodes				= speech-segment


[*.network.speech-segment]
type					= speech-segment
links					= 0->archive-reader:1 0->archive-writer:1


[*.network.archive-reader]
type					= archive-reader
links					= archive-writer
format					= htk
info					= false
[*.network.archive-reader.htk]
suffix					= .lat.gz
fps					= 100
encoding				= utf-8
slf-type				= forward
capitalize				= no
word-penalty				= 0.0
silence-penalty				= 0.0
merge-penalties				= yes
set-coarticulation			= no


[*.network.archive-writer]
type					= archive-writer
links					= sink
format					= flf
path					= $(flf-archive)


[*.network.sink]
type					= sink
warn-on-empty-lattice			= true
error-on-empty-lattice			= false
